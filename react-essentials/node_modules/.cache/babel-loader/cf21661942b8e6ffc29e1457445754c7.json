{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\programming\\\\webdev\\\\react\\\\experiments\\\\react-essentials\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { Home, About, Events, Contact, Whoops404, Services, CompanyHistory, Location } from \"./pages\"; //https://api.github.com/users\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 39\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"services\",\n          element: /*#__PURE__*/_jsxDEV(Services, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/events\",\n        element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Whoops404, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App; //api-s\n// const [data, setData] = useState(null);\n// const [loading, setLoading] = useState(false);\n// const [error, setError] = useState(null);\n// useEffect(() => {\n//   if (!login) return;\n//   setLoading(true);\n//   fetch(`https://api.github.com/users/${login}`)\n//     .then((response) => response.json())\n//     .then(setData)\n//     .then(() => setLoading(false))\n//     .catch(setError);\n// }, [login]);\n// if (loading) return <h1>Loading...</h1>;\n// if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n// if (!data) return null;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Desktop/programming/webdev/react/experiments/react-essentials/src/App.js"],"names":["React","Routes","Route","Home","About","Events","Contact","Whoops404","Services","CompanyHistory","Location","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,cAPF,EAQEC,QARF,QASO,SATP,C,CAUA;;;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAA9B;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KAdQA,G;AAgBT,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport {\n  Home,\n  About,\n  Events,\n  Contact,\n  Whoops404,\n  Services,\n  CompanyHistory,\n  Location,\n} from \"./pages\";\n//https://api.github.com/users\n\nfunction App() {\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<About />}>\n          <Route path=\"services\" element={<Services />} />\n        </Route>\n        <Route path=\"/events\" element={<Events />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route path=\"*\" element={<Whoops404 />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n//api-s\n// const [data, setData] = useState(null);\n// const [loading, setLoading] = useState(false);\n// const [error, setError] = useState(null);\n\n// useEffect(() => {\n//   if (!login) return;\n//   setLoading(true);\n//   fetch(`https://api.github.com/users/${login}`)\n//     .then((response) => response.json())\n//     .then(setData)\n//     .then(() => setLoading(false))\n//     .catch(setError);\n// }, [login]);\n\n// if (loading) return <h1>Loading...</h1>;\n// if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n// if (!data) return null;\n"]},"metadata":{},"sourceType":"module"}